{"version":3,"sources":["config/index.js","components/NavBar.jsx","pages/home/HomeApp.jsx","pages/gift-expert/components/AddCategory.jsx","pages/gift-expert/helpers/getGifs.js","pages/gift-expert/hooks/useFetchGifs.js","pages/gift-expert/components/GifGridItem.jsx","pages/gift-expert/components/GifGrid.jsx","pages/gift-expert/GifExpertApp.jsx","pages/todo-list/reducer/todoReducer.js","hooks/useForm.js","pages/todo-list/components/TodoListItem.jsx","pages/todo-list/components/TodoList.jsx","pages/todo-list/TodoApp.jsx","pages/heroes-app/auth/AuthContext.jsx","pages/heroes-app/routers/PrivateRoute.jsx","pages/heroes-app/routers/PublicRoute.jsx","pages/heroes-app/types/types.js","pages/heroes-app/components/login/LoginScreen.jsx","pages/heroes-app/components/ui/NavBar.jsx","pages/heroes-app/data/heroes.js","pages/heroes-app/selectors/getHeroesByPublisher.js","pages/heroes-app/components/heroes/HeroCard.jsx","pages/heroes-app/components/heroes/HeroList.jsx","pages/heroes-app/components/dc/DcScreen.jsx","pages/heroes-app/selectors/getHeroesById.js","pages/heroes-app/components/heroes/HeroScreen.jsx","pages/heroes-app/components/marvel/MarvelScreen.jsx","pages/heroes-app/selectors/getHeroesBySuperHero.js","pages/heroes-app/components/search/SearchScreen.jsx","pages/heroes-app/routers/DashboardRoutes.jsx","pages/heroes-app/routers/AppRouter.jsx","pages/heroes-app/auth/authReducer.js","pages/heroes-app/HeroesApp.jsx","routers/AplicationsRouter.jsx","routers/AppRouter.jsx","MainApp.jsx","reportWebVitals.js","index.jsx"],"names":["console","log","process","module","exports","API_KEY_GIF","PUBLIC_URL","NavBar","className","to","id","HomeApp","AddCategory","setCategories","React","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","GifGridItem","src","alt","GifGrid","GitExpertApp","categories","todoReducer","action","payload","filter","todo","done","useForm","initialState","values","setValues","resetValues","handleInputChange","name","TodoListItem","index","handleDelete","handleToggle","onClick","desc","defaultProps","TodoList","todos","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","description","setItem","stringify","todoId","newTodo","Date","getTime","placeholder","autoComplete","AuthContext","createContext","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","PublicRoute","types","LOGIN","LOGOUT","LoginScreen","history","useContext","lastPath","replace","user","useHistory","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","activeClassName","exact","heroes","superhero","publisher","alterEgo","firstAppearance","characters","getHeroesByPubliser","includes","Error","hero","HeroCard","style","maxWidth","HeroList","publisherName","useMemo","getHeroesByPublisher","DcScreen","getHeroesById","find","HeroScreen","heroId","useParams","getHeroById","push","goBack","MarvelScreen","getHeroesBySuperHero","superHero","superHeroName","toLowerCase","startsWith","SearchScreen","heroName","handleChangeValue","DashboardRoutes","path","AppRouter","logged","authReducer","HeroesApp","Provider","AplicationsRouter","GiftApp","Home","MainApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f274c379.chunk.js","sourcesContent":["if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line global-require\n    require('dotenv').config();\n}\n\nconsole.log(process.env);\n\nmodule.exports = {\n    API_KEY_GIF: process.env.REACT_APP_API_KEY,\n    PUBLIC_URL: process.env.PUBLIC_URL,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = () => (\n    <nav className='navbar navbar-expand-sm navbar-dark bg-dark'>\n        <Link to='/' className='navbar-brand'>\n            Mahiler\n        </Link>\n        <div className='collapse navbar-collapse' id='navbarNavAltMarkup'>\n            <div className='navbar-nav'>\n                <Link className='nav-item nav-link' to='/gif-app'>\n                    Gift App\n                </Link>\n                <Link className='nav-item nav-link' to='/todo-list-app'>\n                    Todo App\n                </Link>\n                <Link className='nav-item nav-link' to='/heroes-app'>\n                    Heroes App\n                </Link>\n            </div>\n        </div>\n    </nav>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport NavBar from '../../components/NavBar';\n\nconst HomeApp = () => (\n    <>\n        <NavBar />\n        <div>Estamos en el Home de Mahiler</div>\n    </>\n);\n\nexport default HomeApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = React.useState('');\n\n    const handleInputChange = (e) => setInputValue(e.target.value);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories((cat) => [inputValue, ...cat]);\n            setInputValue('');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className='form-control'>\n            <input type='text' value={inputValue} onChange={handleInputChange} />\n        </form>\n    );\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","import { API_KEY_GIF } from '../../../config';\n\nconst getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${API_KEY_GIF}`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map((img) => ({\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url,\n    }));\n    return gifs;\n};\n\nexport default getGifs;\n","import { useState, useEffect } from 'react';\nimport getGifs from '../helpers/getGifs';\n\nconst useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect(() => {\n        getGifs(category).then((gifs) => {\n            setState({ data: gifs, loading: false });\n        });\n    }, []);\n\n    return state;\n};\n\nexport default useFetchGifs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GifGridItem = ({ url, title }) => {\n    console.log('Prueba');\n    return (\n        <div className='gift-card card animate__animated animate__fadeIn'>\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    );\n};\n\nGifGridItem.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n};\n\nexport default GifGridItem;\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport useFetchGifs from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            {loading && <p className='animate__animated animate__flash'>Cargando ...</p>}\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\n            <div className='card-grid'>\n                {images.map((img) => (\n                    <GifGridItem key={img.id} {...img} />\n                ))}\n            </div>\n        </>\n    );\n};\n\nGifGrid.propTypes = {\n    category: PropTypes.string.isRequired,\n};\n\nexport default GifGrid;\n","import React from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\nimport './styles.css';\n\nconst GitExpertApp = () => {\n    const [categories, setCategories] = React.useState([]);\n\n    return (\n        <div className='container p-5'>\n            <h2>Gift App</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n\n            <ol>\n                {categories.map((category) => (\n                    <GifGrid key={category} category={category} />\n                ))}\n            </ol>\n        </div>\n    );\n};\n\nexport default GitExpertApp;\n","/* eslint-disable consistent-return */\n/* eslint-disable import/prefer-default-export */\n\nexport const todoReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD':\n            return [...state, action.payload];\n\n        case 'DELETE':\n            return state.filter((todo) => todo.id !== action.payload);\n\n        case 'TOGGLE':\n            return state.map((todo) => (todo.id === action.payload ? { ...todo, done: !todo.done } : todo));\n        default:\n            return state;\n    }\n};\n","import { useState } from 'react';\n\nconst useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    const resetValues = () => {\n        setValues(initialState);\n    };\n\n    const handleInputChange = ({ target }) => {\n        setValues({ ...values, [target.name]: target.value });\n    };\n\n    return [values, handleInputChange, resetValues];\n};\n\nexport default useForm;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoListItem = ({ todo, index, handleDelete, handleToggle }) => (\n    <li key={todo.id} className='list-group-item'>\n        <p\n            className={`${todo.done && 'complete'}`}\n            onClick={() => {\n                handleToggle(todo.id);\n            }}\n        >\n            {index + 1}. {todo.desc}\n        </p>\n        <button\n            type='submit'\n            className='btn btn-danger'\n            onClick={() => {\n                handleDelete(todo.id);\n            }}\n        >\n            Borrar\n        </button>\n    </li>\n);\n\nTodoListItem.propTypes = {\n    todo: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        desc: PropTypes.string.isRequired,\n        done: PropTypes.bool.isRequired,\n    }),\n    index: PropTypes.number.isRequired,\n    handleToggle: PropTypes.func.isRequired,\n    handleDelete: PropTypes.func.isRequired,\n};\n\nTodoListItem.defaultProps = {\n    todo: {},\n};\n\nexport default TodoListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoListItem from './TodoListItem';\n\nconst TodoList = ({ todos, handleToggle, handleDelete }) => (\n    <ul className='list-group list-group-flush'>\n        {todos.map((todo, index) => (\n            <TodoListItem key={todo.id} todo={todo} index={index} handleToggle={handleToggle} handleDelete={handleDelete} />\n        ))}\n    </ul>\n);\n\nTodoList.propTypes = {\n    todos: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            desc: PropTypes.string.isRequired,\n            done: PropTypes.bool.isRequired,\n        }),\n    ),\n    handleDelete: PropTypes.func.isRequired,\n    handleToggle: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n    todos: [],\n};\n\nexport default TodoList;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\nimport React from 'react';\nimport { todoReducer } from './reducer/todoReducer';\nimport useForm from '../../hooks/useForm';\nimport TodoList from './components/TodoList';\nimport './styles.css';\n\nconst init = () => JSON.parse(localStorage.getItem('todos')) || [];\n\nconst TodoApp = () => {\n    const [todos, dispatch] = React.useReducer(todoReducer, [], init);\n\n    const [{ description }, handleInputChange, resetValues] = useForm({ description: '' });\n\n    React.useEffect(() => {\n        localStorage.setItem('todos', JSON.stringify(todos));\n    }, [todos]);\n\n    const handleDelete = (todoId) => {\n        const action = {\n            type: 'DELETE',\n            payload: todoId,\n        };\n        dispatch(action);\n    };\n\n    const handleToggle = (todoId) => {\n        const action = {\n            type: 'TOGGLE',\n            payload: todoId,\n        };\n        dispatch(action);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (description.trim().length <= 1) {\n            return;\n        }\n        const newTodo = {\n            id: new Date().getTime(),\n            desc: description,\n            done: false,\n        };\n\n        const action = {\n            type: 'ADD',\n            payload: newTodo,\n        };\n\n        dispatch(action);\n        resetValues();\n    };\n\n    return (\n        <div className='container p-5'>\n            <h1>TodoAPP ({todos.length})</h1>\n            <hr />\n            <div className='row'>\n                <div className='col-7'>\n                    <TodoList todos={todos} handleToggle={handleToggle} handleDelete={handleDelete} />\n                </div>\n\n                <div className='col-5'>\n                    <h4>Agregar TODO</h4>\n                    <hr />\n                    <form className='d-grid gap-2' onSubmit={handleSubmit}>\n                        <input type='text' name='description' className='form-control' value={description} placeholder='Aprender ...' autoComplete='off' onChange={handleInputChange} />\n                        <button type='submit' className='btn btn-outline-primary mt-1'>\n                            Agregar\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TodoApp;\n","import { createContext } from 'react';\n\nconst AuthContext = createContext();\nexport default AuthContext;\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n    localStorage.setItem('lastPath', rest.location.pathname);\n    return <Route {...rest} component={(props) => (isAuthenticated ? <Component {...props} /> : <Redirect to='/heroes-app/login' />)} />;\n};\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n};\n\nexport default PrivateRoute;\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => <Route {...rest} component={(props) => (!isAuthenticated ? <Component {...props} /> : <Redirect to='/heroes-app' />)} />;\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n};\n\nexport default PublicRoute;\n","const types = {\n    LOGIN: '[auth] login',\n    LOGOUT: '[auth] logout',\n};\n\nexport default types;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AuthContext from '../../auth/AuthContext';\nimport types from '../../types/types';\n\nconst LoginScreen = ({ history }) => {\n    const { dispatch } = React.useContext(AuthContext);\n\n    const handleLogin = () => {\n        const lastPath = localStorage.getItem('lastPath') || '/heroes-app';\n        dispatch({ type: types.LOGIN, payload: { name: 'Fernando' } });\n        history.replace(lastPath);\n    };\n    return (\n        <div className='container mt-5'>\n            <h1>Login</h1>\n            <hr />\n            <button className='btn btn-primary' type='submit' onClick={handleLogin}>\n                Login\n            </button>\n        </div>\n    );\n};\n\nLoginScreen.propTypes = {\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n        replace: PropTypes.func.isRequired,\n    }).isRequired,\n};\n\nexport default LoginScreen;\n","import React from 'react';\nimport { Link, NavLink, useHistory } from 'react-router-dom';\nimport AuthContext from '../../auth/AuthContext';\nimport types from '../../types/types';\n\nconst NavBar = () => {\n    const {\n        user: { name },\n        dispatch,\n    } = React.useContext(AuthContext);\n\n    const history = useHistory();\n\n    const handleLogOut = () => {\n        dispatch({\n            type: types.LOGOUT,\n        });\n        history.replace('/heroes-app/login');\n    };\n    return (\n        <nav className='navbar sticky-top navbar-expand-lg navbar-dark bg-dark'>\n            <div className='container-fluid'>\n                <Link className='navbar-brand' to='/heroes-app'>\n                    APP-HEROES\n                </Link>\n                <button className='navbar-toggler' type='button' data-bs-toggle='collapse' data-bs-target='#navbarText' aria-controls='navbarText' aria-expanded='false' aria-label='Toggle navigation'>\n                    <span className='navbar-toggler-icon' />\n                </button>\n\n                <div className='collapse navbar-collapse' id='navbarText'>\n                    <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\n                        <li className='nav-item'>\n                            <NavLink activeClassName='active' className='nav-item nav-link text-center' exact to='/heroes-app/marvel'>\n                                Marvel\n                            </NavLink>\n                        </li>\n                        <li className='nav-item'>\n                            <NavLink activeClassName='active' className='nav-item nav-link text-center' exact to='/heroes-app/dc'>\n                                DC\n                            </NavLink>\n                        </li>\n                        <li className='nav-item'>\n                            <NavLink activeClassName='active' className='nav-item nav-link text-center' exact to='/heroes-app/search'>\n                                Search\n                            </NavLink>\n                        </li>\n                    </ul>\n\n                    <div>\n                        <span className='nav-item nav-link text-center text-white'> {`Hola ${name} ! 🖖`} </span>\n                    </div>\n                    <button type='button' className='nav-item nav-link btn btn-secondary' onClick={handleLogOut}>\n                        LogOut\n                    </button>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;\n","const heroes = [\n    {\n        id: 'dc-batman',\n        superhero: 'Batman',\n        publisher: 'DC Comics',\n        alterEgo: 'Bruce Wayne',\n        firstAppearance: 'Detective Comics #27',\n        characters: 'Bruce Wayne',\n    },\n    {\n        id: 'dc-superman',\n        superhero: 'Superman',\n        publisher: 'DC Comics',\n        alterEgo: 'Kal-El',\n        firstAppearance: 'Action Comics #1',\n        characters: 'Kal-El',\n    },\n    {\n        id: 'dc-flash',\n        superhero: 'Flash',\n        publisher: 'DC Comics',\n        alterEgo: 'Jay Garrick',\n        firstAppearance: 'Flash Comics #1',\n        characters: 'Jay Garrick, Barry Allen, Wally West, Bart Allen',\n    },\n    {\n        id: 'dc-green',\n        superhero: 'Green Lantern',\n        publisher: 'DC Comics',\n        alterEgo: 'Alan Scott',\n        firstAppearance: 'All-American Comics #16',\n        characters: 'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz',\n    },\n    {\n        id: 'dc-arrow',\n        superhero: 'Green Arrow',\n        publisher: 'DC Comics',\n        alterEgo: 'Oliver Queen',\n        firstAppearance: 'More Fun Comics #73',\n        characters: 'Oliver Queen',\n    },\n    {\n        id: 'dc-wonder',\n        superhero: 'Wonder Woman',\n        publisher: 'DC Comics',\n        alterEgo: 'Princess Diana',\n        firstAppearance: 'All Star Comics #8',\n        characters: 'Princess Diana',\n    },\n    {\n        id: 'dc-martian',\n        superhero: 'Martian Manhunter',\n        publisher: 'DC Comics',\n        alterEgo: \"J'onn J'onzz\",\n        firstAppearance: 'Detective Comics #225',\n        characters: 'Martian Manhunter',\n    },\n    {\n        id: 'dc-robin',\n        superhero: 'Robin/Nightwing',\n        publisher: 'DC Comics',\n        alterEgo: 'Dick Grayson',\n        firstAppearance: 'Detective Comics #38',\n        characters: 'Dick Grayson',\n    },\n    {\n        id: 'dc-blue',\n        superhero: 'Blue Beetle',\n        publisher: 'DC Comics',\n        alterEgo: 'Dan Garret',\n        firstAppearance: 'Mystery Men Comics #1',\n        characters: 'Dan Garret, Ted Kord, Jaime Reyes',\n    },\n    {\n        id: 'dc-black',\n        superhero: 'Black Canary',\n        publisher: 'DC Comics',\n        alterEgo: 'Dinah Drake',\n        firstAppearance: 'Flash Comics #86',\n        characters: 'Dinah Drake, Dinah Lance',\n    },\n    {\n        id: 'marvel-spider',\n        superhero: 'Spider Man',\n        publisher: 'Marvel Comics',\n        alterEgo: 'Peter Parker',\n        firstAppearance: 'Amazing Fantasy #15',\n        characters: 'Peter Parker',\n    },\n    {\n        id: 'marvel-captain',\n        superhero: 'Captain America',\n        publisher: 'Marvel Comics',\n        alterEgo: 'Steve Rogers',\n        firstAppearance: 'Captain America Comics #1',\n        characters: 'Steve Rogers',\n    },\n    {\n        id: 'marvel-iron',\n        superhero: 'Iron Man',\n        publisher: 'Marvel Comics',\n        alterEgo: 'Tony Stark',\n        firstAppearance: 'Tales of Suspense #39',\n        characters: 'Tony Stark',\n    },\n    {\n        id: 'marvel-thor',\n        superhero: 'Thor',\n        publisher: 'Marvel Comics',\n        alterEgo: 'Thor Odinson',\n        firstAppearance: 'Journey into Myster #83',\n        characters: 'Thor Odinson',\n    },\n    {\n        id: 'marvel-hulk',\n        superhero: 'Hulk',\n        publisher: 'Marvel Comics',\n        alterEgo: 'Bruce Banner',\n        firstAppearance: 'The Incredible Hulk #1',\n        characters: 'Bruce Banner',\n    },\n    {\n        id: 'marvel-wolverine',\n        superhero: 'Wolverine',\n        publisher: 'Marvel Comics',\n        alterEgo: 'James Howlett',\n        firstAppearance: 'The Incredible Hulk #180',\n        characters: 'James Howlett',\n    },\n    {\n        id: 'marvel-daredevil',\n        superhero: 'Daredevil',\n        publisher: 'Marvel Comics',\n        alterEgo: 'Matthew Michael Murdock',\n        firstAppearance: 'Daredevil #1',\n        characters: 'Matthew Michael Murdock',\n    },\n    {\n        id: 'marvel-hawkeye',\n        superhero: 'Hawkeye',\n        publisher: 'Marvel Comics',\n        alterEgo: 'Clinton Francis Barton',\n        firstAppearance: 'Tales of Suspense #57',\n        characters: 'Clinton Francis Barton',\n    },\n    {\n        id: 'marvel-cyclops',\n        superhero: 'Cyclops',\n        publisher: 'Marvel Comics',\n        alterEgo: 'Scott Summers',\n        firstAppearance: 'X-Men #1',\n        characters: 'Scott Summers',\n    },\n    {\n        id: 'marvel-silver',\n        superhero: 'Silver Surfer',\n        publisher: 'Marvel Comics',\n        alterEgo: 'Norrin Radd',\n        firstAppearance: 'The Fantastic Four #48',\n        characters: 'Norrin Radd',\n    },\n];\n\nexport default heroes;\n","import heroes from '../data/heroes';\n\nconst getHeroesByPubliser = (publisher) => {\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\n    if (!validPublishers.includes(publisher)) {\n        throw new Error(`Publiser ${publisher} no es correcto`);\n    }\n    return heroes.filter((hero) => hero.publisher === publisher);\n};\nexport default getHeroesByPubliser;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst HeroCard = ({ id, superhero, alterEgo, firstAppearance, characters }) => {\n    console.log('');\n    return (\n        <div className='card ms-3 mt-3 animate__animated animate__zoomIn' style={{ maxWidth: 540 }}>\n            <div className='row no-gutters'>\n                <div className='col-md-4'>\n                    <img src={`../../assets/images/${id}.jpg`} className='card-img' alt={superhero} />\n                </div>\n                <div className='col-md-8'>\n                    <div className='card-body'>\n                        <h5 className='card-title'> {superhero}</h5>\n                        <p className='card-text'>{alterEgo}</p>\n                        {alterEgo !== characters && <p className='card-text'>{characters}</p>}\n                        <p className='card-text'>\n                            <small className='text-muted'>{firstAppearance}</small>\n                        </p>\n                        <Link to={`/heroes-app/hero/${id}`}> Más ...</Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nHeroCard.propTypes = {\n    id: PropTypes.string.isRequired,\n    superhero: PropTypes.string.isRequired,\n    alterEgo: PropTypes.string.isRequired,\n    firstAppearance: PropTypes.string.isRequired,\n    characters: PropTypes.string.isRequired,\n};\n\nexport default HeroCard;\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport getHeroesByPublisher from '../../selectors/getHeroesByPublisher';\nimport HeroCard from './HeroCard';\n\nconst HeroList = ({ publisherName }) => {\n    const heroes = React.useMemo(() => getHeroesByPublisher(publisherName), [publisherName]);\n    return (\n        <div className='d-flex flex-wrap justify-content-center'>\n            {heroes.map((hero) => (\n                <HeroCard key={hero.id} {...hero} />\n            ))}\n        </div>\n    );\n};\n\nHeroList.propTypes = {\n    publisherName: PropTypes.string.isRequired,\n};\n\nexport default HeroList;\n","import React from 'react';\nimport HeroList from '../heroes/HeroList';\n\nconst DcScreen = () => {\n    console.log('');\n    return (\n        <div>\n            <h1>DC Screen</h1>\n            <hr />\n            <HeroList publisherName='DC Comics' />\n        </div>\n    );\n};\n\nexport default DcScreen;\n","import heroes from '../data/heroes';\n\nconst getHeroesById = (id) => heroes.find((hero) => hero.id === id);\nexport default getHeroesById;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Redirect, useParams } from 'react-router-dom';\nimport getHeroById from '../../selectors/getHeroesById';\n\nconst HeroScreen = ({ history }) => {\n    const { heroId } = useParams();\n\n    const hero = React.useMemo(() => getHeroById(heroId), [heroId]);\n\n    if (!hero) {\n        return <Redirect to='/heroes-app' />;\n    }\n\n    const hadleReturn = () => {\n        if (history.length <= 2) {\n            history.push('/heroes-app');\n        } else {\n            history.goBack();\n        }\n    };\n    const { superhero, publisher, alterEgo, firstAppearance, characters } = hero;\n\n    return (\n        <div className='row mt-5'>\n            <div className='col-4'>\n                <img src={`../../assets/images/${heroId}.jpg`} alt={superhero} className='img-thumbnail animate__animated animate__fadeInLeft' />\n            </div>\n            <div className='col-8 animate__animated animate__fadeIn'>\n                <h3> {superhero}</h3>\n                <ul className='list-group list-group-flush'>\n                    <li className='list-group-item'>\n                        <b>Alter ego:</b> {alterEgo}\n                    </li>\n                    <li className='list-group-item'>\n                        <b>Publisher:</b> {publisher}\n                    </li>\n                    <li className='list-group-item'>\n                        <b>First appearance:</b> {firstAppearance}\n                    </li>\n                </ul>\n                <h5> Characters</h5>\n                <p>{characters}</p>\n                <button className='btn btn-outline-info' type='submit' onClick={hadleReturn}>\n                    Return\n                </button>\n            </div>\n        </div>\n    );\n};\n\nHeroScreen.propTypes = {\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n        goBack: PropTypes.func.isRequired,\n        length: PropTypes.number.isRequired,\n    }).isRequired,\n};\n\nexport default HeroScreen;\n","import React from 'react';\nimport HeroList from '../heroes/HeroList';\n\nconst MarvelScreen = () => {\n    console.log('');\n    return (\n        <div>\n            <h1>Marvel Screen</h1>\n            <hr />\n            <HeroList publisherName='Marvel Comics' />\n        </div>\n    );\n};\n\nexport default MarvelScreen;\n","import heroes from '../data/heroes';\n\nconst getHeroesBySuperHero = (superHero) => {\n    if (superHero.trim().length < 1) return [];\n    const superHeroName = superHero.toLowerCase();\n    return heroes.filter((hero) => hero.superhero.toLowerCase().startsWith(superHeroName));\n};\n\nexport default getHeroesBySuperHero;\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React from 'react';\nimport useForm from '../../../../hooks/useForm';\nimport getHeroesBySuperHero from '../../selectors/getHeroesBySuperHero';\nimport HeroCard from '../heroes/HeroCard';\n\nconst SearchScreen = () => {\n    const [{ heroName }, handleChangeValue] = useForm({ heroName: '' });\n\n    const heroes = getHeroesBySuperHero(heroName);\n    return (\n        <div>\n            <h1>Search Screen</h1>\n            <hr />\n            <div className='row'>\n                <div className='col-5'>\n                    <h4>Search Form</h4>\n                    <input type='text' value={heroName} name='heroName' placeholder='Find your Hero' className='form-control' onChange={handleChangeValue} />\n                </div>\n                <div className='col-7'>\n                    <h4>Results</h4>\n                    <hr />\n                    {heroes.length === 0 && <div className='alert alert-info'> Hero not found</div>}\n                    {heroes.map((hero) => (\n                        <HeroCard key={hero.id} {...hero} />\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SearchScreen;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport NavBar from '../components/ui/NavBar';\nimport DcScreen from '../components/dc/DcScreen';\nimport HeroScreen from '../components/heroes/HeroScreen';\nimport MarvelScreen from '../components/marvel/MarvelScreen';\nimport SearchScreen from '../components/search/SearchScreen';\n\nconst DashboardRoutes = () => {\n    console.log('');\n    return (\n        <>\n            <NavBar />\n            <div className='container mt-5'>\n                <Switch>\n                    <Route exact path='/heroes-app/marvel' component={MarvelScreen} />\n                    <Route exact path='/heroes-app/dc' component={DcScreen} />\n                    <Route exact path='/heroes-app/search' component={SearchScreen} />\n                    <Route exact path='/heroes-app/hero/:heroId' component={HeroScreen} />\n                    <Redirect to='/heroes-app/marvel' />\n                </Switch>\n            </div>\n        </>\n    );\n};\n\nexport default DashboardRoutes;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\n\nimport LoginScreen from '../components/login/LoginScreen';\nimport DashboardRoutes from './DashboardRoutes';\nimport AuthContext from '../auth/AuthContext';\n\nconst AppRouter = () => {\n    const {\n        user: { logged },\n    } = React.useContext(AuthContext);\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute path='/heroes-app/login' exact isAuthenticated={logged} component={LoginScreen} />\n                    <PrivateRoute path='/heroes-app' isAuthenticated={logged} component={DashboardRoutes} />\n                </Switch>\n            </div>\n        </Router>\n    );\n};\n\nexport default AppRouter;\n","import types from '../types/types';\n\nconst authReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.LOGIN:\n            return {\n                ...action.payload,\n                logged: true,\n            };\n        case types.LOGOUT:\n            return {\n                logged: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;\n","import React from 'react';\nimport AuthContext from './auth/AuthContext';\nimport AppRouter from './routers/AppRouter';\nimport authReducer from './auth/authReducer';\n\nconst init = () => JSON.parse(localStorage.getItem('user')) || { logged: false };\n\nconst HeroesApp = () => {\n    const [user, dispatch] = React.useReducer(authReducer, {}, init);\n\n    React.useEffect(() => {\n        localStorage.setItem('user', JSON.stringify(user));\n    }, [user]);\n\n    return (\n        <AuthContext.Provider value={{ user, dispatch }}>\n            <AppRouter />;\n        </AuthContext.Provider>\n    );\n};\n\nexport default HeroesApp;\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { GiftApp, TodoApp, HeroesApp } from '../pages';\n\nconst AplicationsRouter = () => {\n    console.log('');\n    return (\n        <div>\n            <Switch>\n                <Route exact path='/gif-app' component={GiftApp} />\n                <Route exact path='/todo-list-app' component={TodoApp} />\n                <Route path='/heroes-app' component={HeroesApp} />\n                <Redirect to='/' />\n            </Switch>\n        </div>\n    );\n};\n\nexport default AplicationsRouter;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { Home } from '../pages';\nimport AplicationsRouter from './AplicationsRouter';\n// import HeroRouter from '../pages/heroes-app/routers/AppRouter';\n\nconst AppRouter = () => {\n    console.log('');\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route exact path='/' component={Home} />\n                    <Route path='/' component={AplicationsRouter} />\n                </Switch>\n            </div>\n        </Router>\n    );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport AppRouter from './routers/AppRouter';\nimport './index.css';\n\nconst MainApp = () => <AppRouter />;\n\nexport default MainApp;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainApp from './MainApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <MainApp />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}